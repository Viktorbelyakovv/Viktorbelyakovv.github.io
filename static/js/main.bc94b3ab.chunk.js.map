{"version":3,"sources":["components/App/ThemeSwitch.jsx","components/App/Loader.jsx","components/Filters/NameFilter.jsx","components/Filters/AuthorFilter.jsx","components/Filters/LocationFilter.jsx","components/Filters/CreatedFilter.jsx","components/Filters/Filters.jsx","components/Filters/index.js","components/Gallery/Card.jsx","components/Gallery/Gallery.jsx","components/Gallery/index.js","components/Pagination/Pagination.jsx","components/Pagination/index.js","components/App/App.jsx","components/App/index.js","utils/api.js","reportWebVitals.js","index.js"],"names":["ThemeSwitch","props","className","src","isDarkTheme","alt","onClick","changeTheme","Loader","NameFilter","placeholder","class","value","nameFilter","onChange","event","setNameFilter","target","setCurrentPage","AuthorFilter","authorFilter","name","author","id","authors","forEach","setAuthorFilter","options","concat","LocationFilter","locations","map","location","locationFilter","setLocationFilter","cx","classNames","bind","styles","CreatedFilter","onClose","e","setCreatedFilter","createdFilter","from","before","Filters","Card","paintings","imageUrl","authorId","created","locationId","Gallery","Pagination","pagesAmount","Math","ceil","paintingsAmount","paintingsPerPage","width","window","innerWidth","useEffect","setPaintingsPerPage","currentPage","page","App","useState","setDarkTheme","isLoading","setLoading","setPaintingsAmount","React","setPaintings","str","fetch","mode","then","response","json","length","UploadPaintings","setAuthors","UploadAuthors","setLocations","UploadLocations","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc94b3ab.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ThemeSwitch(props) {\r\n  const switchWhite = \"./switch-white.svg\"\r\n  const switchBlack = \"./switch-black.svg\"\r\n  return (\r\n    <img className=\"Switch\" src={props.isDarkTheme?switchWhite:switchBlack} alt=\"switch\" onClick={props.changeTheme}/>  \r\n  )\r\n}\r\nexport default ThemeSwitch;","import React from \"react\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <div className=\"lds-spinner\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport {Input} from 'fwt-internship-uikit/'\r\n\r\nfunction NameFilter(props) {  \r\n  function onChange(event) {\r\n    props.setNameFilter(event.target.value)\r\n    props.setCurrentPage(1)\r\n  } \r\n  return(\r\n    <Input \r\n      placeholder=\"Name\"\r\n      className={props.class} \r\n      isDarkTheme={props.isDarkTheme} \r\n      value={props.nameFilter} \r\n      onChange={onChange}>  \r\n    </Input>\r\n  )\r\n}\r\n\r\nexport default NameFilter","import React from \"react\";\r\nimport {Select} from 'fwt-internship-uikit/'\r\n\r\nfunction AuthorFilter(props) { \r\n  const title = [{id: 0, name: \"Author\"}]\r\n  function onChange(author) {\r\n    let id = 0\r\n    props.authors.forEach(function(value) {\r\n      if (author === value.name)\r\n        id = value.id\r\n    })\r\n    props.setAuthorFilter({id: id, name: author})\r\n    props.setCurrentPage(1)\r\n  } \r\n  return(\r\n    <Select \r\n      className={props.class}\r\n      isDarkTheme={props.isDarkTheme} \r\n      value={props.authorFilter.name} \r\n      onChange={onChange} \r\n      options={(!props.authorFilter.id ? props.authors: title.concat(props.authors))}>\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default AuthorFilter","import React from \"react\";\r\nimport {Select} from 'fwt-internship-uikit/'\r\n\r\nfunction LocationFilter(props) {\r\n  const title = [{id: 0, name: \"Location\"}]\r\n  function onChange(location) {\r\n    let id = 0\r\n    props.locations.forEach(function(value) {\r\n      if (location === value.location)\r\n        id = value.id\r\n    })\r\n    props.setLocationFilter({id: id, location: location})\r\n    props.setCurrentPage(1)\r\n  }\r\n  const locations = props.locations.map(function(value) {\r\n    return {id : value.id, name: value.location};\r\n  });\r\n  return(\r\n    <Select \r\n      className={props.class}\r\n      isDarkTheme={props.isDarkTheme} \r\n      value={props.locationFilter.location} \r\n      onChange={onChange} \r\n      options={(!props.locationFilter.id ? locations: title.concat(locations))}>\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default LocationFilter","import React from 'react'\r\nimport {Range, Input} from 'fwt-internship-uikit/'\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Filters.css';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\nfunction CreatedFilter(props) {\r\n  function onChangeFrom(value) {\r\n    props.setCreatedFilter({...props.createdFilter, from: value})   \r\n    props.setCurrentPage(1)\r\n  }\r\n  function onChangeBefore(value) {\r\n    props.setCreatedFilter({...props.createdFilter, before: value})\r\n    props.setCurrentPage(1)\r\n  }\r\n  function onClose() {    \r\n    return 0;    \r\n  }\r\n  return(\r\n    <div>\r\n      <Range \r\n        onClose={onClose}\r\n        isDarkTheme={props.isDarkTheme} \r\n        aria-hidden=\"true\" \r\n        className={props.class}>        \r\n        <Input\r\n          isDarkTheme={props.isDarkTheme}\r\n          className={cx('input', 'input--from', {\r\n            'input--dark': props.isDarkTheme\r\n          })}\r\n          placeholder=\"from\"\r\n          onChange={(e) => onChangeFrom(e.target.value)}\r\n          value={props.createdFilter.from}\r\n        />\r\n        <div\r\n          className={cx('separator', {\r\n            'separator--dark': props.isDarkTheme\r\n          })}\r\n        />\r\n        <Input\r\n          isDarkTheme={props.isDarkTheme}\r\n          className={cx('input', 'input--before', {\r\n            'input--dark': props.isDarkTheme\r\n          })}\r\n          placeholder=\"before\"\r\n          onChange={(e) => onChangeBefore(e.target.value)}\r\n          value={props.createdFilter.before}\r\n        />\r\n      </Range>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatedFilter\r\n","import React from \"react\";\r\nimport NameFilter from \"./NameFilter\"\r\nimport AuthorFilter from \"./AuthorFilter\"\r\nimport LocationFilter from \"./LocationFilter\"\r\nimport CreatedFilter from \"./CreatedFilter\"\r\nimport './Filters.css';\r\n\r\nfunction Filters(props) {\r\n  return (\r\n    <div className=\"Filters\">\r\n      <NameFilter\r\n        nameFilter={props.nameFilter}\r\n        setNameFilter={props.setNameFilter}\r\n        class={\"Filter col-tab-3 col-lap-3 col-desk-3 \"}\r\n        isDarkTheme={props.isDarkTheme}\r\n        setCurrentPage={props.setCurrentPage}\r\n      />\r\n      <AuthorFilter \r\n        authors={props.authors}\r\n        authorFilter={props.authorFilter}\r\n        setAuthorFilter={props.setAuthorFilter}        \r\n        class={\"Filter col-tab-3 col-lap-3 col-desk-3 \"}\r\n        isDarkTheme={props.isDarkTheme}\r\n        setCurrentPage={props.setCurrentPage}\r\n      />\r\n      <LocationFilter\r\n        locations={props.locations}\r\n        locationFilter={props.locationFilter}\r\n        setLocationFilter={props.setLocationFilter}\r\n        class={\"Filter col-tab-3 col-lap-3 col-desk-3 \"}\r\n        isDarkTheme={props.isDarkTheme}\r\n        setCurrentPage={props.setCurrentPage}\r\n      />\r\n      <CreatedFilter\r\n        createdFilter={props.createdFilter}\r\n        setCreatedFilter={props.setCreatedFilter}\r\n        class={\"Filter col-tab-3 col-lap-3 col-desk-3 \"}\r\n        isDarkTheme={props.isDarkTheme}\r\n        setCurrentPage={props.setCurrentPage}\r\n      />\r\n    </div>   \r\n  )\r\n}\r\n\r\nexport default Filters;","import Filters from './Filters.jsx';\r\nexport default Filters;","import React from \"react\";\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Gallery.css';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"Card\">\r\n      <img className=\"Img col-tab-6 col-lap-4 col-desk-4\" \r\n        src ={\"https://test-front.framework.team\"+ props.paintings.imageUrl} \r\n        alt=\"no\" />\r\n      <div className=\"Overlay\">\r\n        <div className=\"Text\">\r\n          <div className={cx('Text', 'Text__name')}>{props.paintings.name} </div>\r\n          <div className={cx('Text', 'Text__info')}>\r\n            <div><b>Author: </b>{props.authors[props.paintings.authorId-1].name}</div>\r\n            <div><b>Created: </b>{props.paintings.created}</div>\r\n            <div><b>Location: </b>{props.locations[props.paintings.locationId-1].location}</div>\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    </div>      \r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Card from \"./Card\";\r\nimport './Gallery.css';\r\n\r\nfunction Gallery(props) {\r\n  const paintings = props.paintings\r\n  const authors = props.authors\r\n  const locations = props.locations\r\n  return(\r\n    <div className=\"Gallery\">\r\n      {paintings.map((paintings) => {\r\n        return <Card paintings={paintings} authors={authors} locations={locations} key={paintings.id}/>  \r\n      })}\r\n    </div>    \r\n  )\r\n}\r\n\r\nGallery.propTypes = {\r\n  paintings: PropTypes.array,\r\n  authors: PropTypes.array,\r\n  locations: PropTypes.array,\r\n}\r\n\r\nexport default Gallery;","import Gallery from './Gallery.jsx';\r\nexport default Gallery;","import React, {useEffect} from \"react\";\r\nimport {Pagination as PaginationComponent} from 'fwt-internship-uikit/'\r\nimport './Pagination.css';\r\n\r\nfunction Pagination(props) {\r\n  var pagesAmount = Math.ceil(props.paintingsAmount/props.paintingsPerPage)\r\n  var width = window.innerWidth\r\n  useEffect(() => {\r\n    if (width > 1023) {\r\n      props.setPaintingsPerPage(9)\r\n    }\r\n    else if (width > 767) {\r\n      props.setPaintingsPerPage(8)\r\n    }\r\n    else {\r\n      props.setPaintingsPerPage(6)\r\n    }\r\n    if (props.currentPage > pagesAmount) {\r\n      props.setCurrentPage(pagesAmount)\r\n    }\r\n  }, [width, props, pagesAmount])\r\n\r\n  function onChange(page) {    \r\n    props.setCurrentPage(page)\r\n    return 0;\r\n  }\r\n  return (\r\n    <PaginationComponent\r\n      isDarkTheme = {props.isDarkTheme}\r\n      pagesAmount = {pagesAmount}\r\n      currentPage = {props.currentPage}\r\n      onChange = {onChange}\r\n    >\r\n    </PaginationComponent>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import Pagination from './Pagination.jsx';\r\nexport default Pagination;","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport ThemeSwitch from \"./ThemeSwitch\";\r\nimport Loader from \"./Loader\";\r\nimport {UploadPaintings, UploadAuthors, UploadLocations} from \"../../utils/api.js\";\r\nimport Filters from \"../Filters\";\r\nimport Gallery from \"../Gallery\"\r\nimport Pagination from \"../Pagination\";\r\nimport classNames from 'classnames/bind';\r\nimport styles from './App.css';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\nfunction App() {\r\n  const [isDarkTheme, setDarkTheme] = useState(false)\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\")\r\n  const [authorFilter, setAuthorFilter] = useState({id : 0, name: \"Author\"})\r\n  const [locationFilter, setLocationFilter] = useState({id : 0, location: \"Location\"})\r\n  const [createdFilter, setCreatedFilter] = useState({from:\"\",before:\"\"})\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [paintingsPerPage, setPaintingsPerPage] = useState(9)\r\n  const [paintingsAmount, setPaintingsAmount] = useState(0)\r\n\r\n  const paintings = UploadPaintings(\r\n    nameFilter, \r\n    authorFilter, \r\n    locationFilter, \r\n    createdFilter, \r\n    currentPage, \r\n    paintingsPerPage, \r\n    setPaintingsAmount\r\n  )\r\n  const authors = UploadAuthors()\r\n  const locations = UploadLocations()\r\n  setTimeout(() => {\r\n    setLoading(false) \r\n    }, 2000\r\n  )\r\n\r\n  function changeTheme() {\r\n    setDarkTheme(!isDarkTheme)\r\n  }\r\n  return(\r\n    <div className={cx('Page', {'Page--dark': isDarkTheme})}>  \r\n      <div className=\"Container\">          \r\n        <div className=\"Header\">\r\n          <img className={cx('Logo', {'Logo--dark': isDarkTheme})} src=\"./logo.svg\" alt=\"logo\"/>\r\n          <ThemeSwitch isDarkTheme={isDarkTheme} changeTheme={changeTheme}/>       \r\n        </div> \r\n        {isLoading?<Loader/>: \r\n          <div className=\"Content\"> \r\n            <Filters \r\n              nameFilter={nameFilter} setNameFilter={setNameFilter} \r\n              authorFilter={authorFilter} setAuthorFilter={setAuthorFilter}\r\n              locationFilter={locationFilter} setLocationFilter={setLocationFilter}\r\n              createdFilter={createdFilter} setCreatedFilter={setCreatedFilter}\r\n              authors={authors} locations={locations} isDarkTheme={isDarkTheme}\r\n              setCurrentPage={setCurrentPage}\r\n            />\r\n            <Gallery\r\n              paintings={paintings}\r\n              authors={authors}\r\n              locations={locations}\r\n            />         \r\n            <Pagination \r\n              isDarkTheme={isDarkTheme} \r\n              paintings={paintings}\r\n              paintingsAmount={paintingsAmount}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              paintingsPerPage={paintingsPerPage}\r\n              setPaintingsPerPage={setPaintingsPerPage}\r\n            />\r\n          </div>\r\n        }\r\n      </div>        \r\n    </div> \r\n  )\r\n}\r\n\r\nApp.propTypes = {\r\n  isDarkTheme: PropTypes.bool,\r\n  isLoading: PropTypes.bool,\r\n\r\n  nameFilter: PropTypes.string,\r\n  authorFilter: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n  }),\r\n  locationFilter: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    location: PropTypes.string,\r\n  }),\r\n  createdFilter: PropTypes.objectOf(PropTypes.string),\r\n\r\n  currentPage: PropTypes.number,\r\n  paintingsPerPage: PropTypes.number,\r\n  paintingsAmount: PropTypes.number,\r\n\r\n  paintings: PropTypes.array,\r\n  authors: PropTypes.array,\r\n  locations: PropTypes.array,\r\n}\r\n\r\nexport default App;\r\n","import App from './App.jsx';\r\nexport default App;","import React, {useEffect} from \"react\"\r\n\r\nexport function UploadPaintings(nameFilter, authorFilter, locationFilter, createdFilter, currentPage, paintingsPerPage, setPaintingsAmount) {\r\n  const [paintings, setPaintings] = React.useState([])    \r\n  useEffect(() => {\r\n    var str = \"\"\r\n    if (nameFilter !== \"\") {\r\n      str+= `name=${nameFilter}`\r\n    }\r\n    if (authorFilter.id !== 0) {\r\n      str+= `&authorId=${authorFilter.id}`\r\n    }\r\n    if (locationFilter.id !== 0) {\r\n      str+= `&locationId=${locationFilter.id}`\r\n    }\r\n    if (createdFilter.from !== \"\") {\r\n      str+= `&created_gte=${createdFilter.from}`\r\n    }\r\n    if (createdFilter.before !== \"\") {\r\n      str+= `&created_lte=${createdFilter.before}`\r\n    }\r\n    fetch(`https://test-front.framework.team/paintings?${str}`, {mode: 'cors'})\r\n      .then(response => response.json())\r\n      .then(paintings => {\r\n      setPaintingsAmount(paintings.length)    \r\n    })\r\n    fetch(`https://test-front.framework.team/paintings?_page=${currentPage}&_limit=${paintingsPerPage}&${str}`, {mode: 'cors'})\r\n      .then(response => response.json())\r\n      .then(paintings => {\r\n      setPaintings(paintings)\r\n    })\r\n  }, [nameFilter, authorFilter, locationFilter, createdFilter, currentPage, paintingsPerPage, setPaintingsAmount])\r\n  return paintings;\r\n}\r\n\r\nexport function UploadAuthors() {  \r\n  const [authors, setAuthors] = React.useState([])\r\n  useEffect(() => {\r\n    fetch('https://test-front.framework.team/authors', {mode: 'cors'})\r\n    .then(response => response.json())\r\n    .then(authors => {\r\n    setAuthors(authors)    \r\n    })\r\n  }, [])\r\n  return authors;\r\n}\r\n\r\nexport function UploadLocations() {\r\n  const [locations, setLocations] = React.useState([])\r\n  useEffect(() => {\r\n    fetch('https://test-front.framework.team/locations')\r\n    .then(response => response.json())\r\n    .then(locations => {\r\n      setLocations(locations)                \r\n    })     \r\n  })  \r\n  return locations;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')    \r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}